<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
    <string name="app_name">The Music Genreator</string>

    <string name="search_db">Search Database</string>

    <string name="welcome_message">
        Welcome to the music genre generator, the Music Genreator!
        Browse through over 1500 genres, explore them via playlists.
        Add your own favourite playlists too.
    </string>

    <string name="browse_genres">Explore By Genre</string>
    <string name="browse_genres_subtext">An A to Z list of every genre throughout the world.</string>
    <string name="browse_genres_title">Genres A-Z</string>
    <string name="browse_genres_none">No genres beginning with %1$c</string>
    <string name="add_genres">Add A New Genre</string>
    <string name="genre_info_none">None</string>

    <string name="playlists_header">Playlists</string>
    <string name="countries_header">Countries&#8230;</string>
    <string name="cities_header">Cities&#8230;</string>

    <string name="country_city_header">&#8230;of Origin &amp; Influence:</string>

    <string name="browse_cities">Explore By City</string>
    <string name="browse_cities_subtext">See the origin and influence of each genre by city.</string>
    <string name="browse_cities_title">Cities A-Z</string>
    <string name="add_cities">Add A New City</string>

    <string name="browse_countries">Explore By Country</string>
    <string name="browse_countries_subtext">See the origin and influence of genres by country.</string>
    <string name="browse_countries_title">Countries A-Z</string>
    <string name="add_country">Add A New Country</string>


    <string name="browse_playlists">Browse Playlists</string>
    <string name="browse_playlists_subtext">Check out all the playlists, or even add your own!</string>
    <string name="browse_playlists_title">Playlists Browser</string>
    <string name="browse_playlists_none">No playlists of this genre yet.</string>
    <string name="add_playlist">Add A New Playlist</string>
    <string name="no_playlists_by_service">No playlists here yet.</string>
    <string name="search_playlists_by_service">Search playlists here.</string>


    <string name="add_items_dialog_title">
        Add Items to <xliff:g example="Blues" id="genre">%1$s</xliff:g>
    </string>
    <string name="add_items_to_genre_dialog_header">Add Areas of Origin and Influence</string>

    <string name="add_cities_dialog_title">Add New City or Genre to City</string>
    <string name="add_countries_dialog_title">Add New Country or Genre to Country</string>

    <string name="add_genre_to">
        Add Genre To <xliff:g example="Los Angeles" id="city_country_playlist">%1$s</xliff:g>
    </string>

    <string name="added_items">
        <xliff:g example="Los Angeles" id="city_country_or_ playlist">%1$s</xliff:g>
        added as area of influence to: <xliff:g example="Alternative Rock" id="genre">%2$s</xliff:g>
    </string>
    <string name="added_genre">
        <xliff:g example="Alternative Rock" id="genre">%1$s</xliff:g> has been added as a new genre
    </string>
    <string name="not_added_genre">
        <xliff:g example="Alternative Rock" id="genre">%1$s</xliff:g> is already in this database
    </string>

    <string name="added_city">
        <xliff:g example="Paris" id="city">%1$s</xliff:g> has been added as a new city
    </string>
    <string name="not_added_city">
        <xliff:g example="London" id="city">%1$s</xliff:g> is already in this database
    </string>

    <string name="added_country">
        <xliff:g example="Russia" id="country">%1$s</xliff:g> has been added as a new country
    </string>
    <string name="not_added_country">
        <xliff:g example="Kenya" id="country">%1$s</xliff:g> is already in this database
    </string>

    <string name="search_results_title">Search Results</string>

    <string name="search_results_genres_none">
        No genres matching this search term. Search again?
    </string>
    <string name="search_results_cities_none">
        No cities matching this search term. Search again?
    </string>
    <string name="search_results_coutnries_none">
        No countries matching this search term. Search again?
    </string>
    <string name="search_results_playlists_none">
        No playlists matching this search term. Search again?
    </string>

    <string name="genres">
        Genres (<xliff:g example="25" id="num_genre_results">%1$s</xliff:g>)
    </string>
    <string name="countries">
        Countries (<xliff:g example="25" id="num_country_results">%1$s</xliff:g>)
    </string>
    <string name="cities">
        Cities (<xliff:g example="25" id="num_city_results">%1$s</xliff:g>)
    </string>
    <string name="playlists">
        Playlists (<xliff:g example="25" id="num_playlist_results">%1$s</xliff:g>)
    </string>

    <string name="not_available">
        This feature is currently unavailable, sorry. \n
        Please enjoy the other features in this fine app!
    </string>

    <string name="disabled">This feature has been disable for the purposes of this submission</string>

    <string name="play_store_msg">
        You don\'t have Spotify, it seems, so you will be unable to check this playlist out there.
        You could download it though, if you fancy. ;)
    </string>

    <string name="or">OR</string>
    <string name="title_activity_search_results">SearchResultsActivity</string>
    <string name="action_settings">Settings</string>
    <string name="section_format">Hello World from section: %1$d</string>

    <!--Descrption Strings for each activity screen-->
    <string name="main_activity">
        MAIN ACTIVTY \n This is the screen for the MainActivity.java. It consists of a ConstraintLayout,
        which contains a TextView with the intro message, and then 4 nested LinearLayouts, with
        nested TextViews. Each of the nested LinearLayouts has an OnClickListener which takes the
        user to one of the following 4 activities: GenreBrowserActivity, CityBrowserActivity,
        CountryBrowserActivity or PlaylistBrowserActivity. This is achieved using explicit Intents.
        I have used a custom ExpandableTextView for all my descriptions throughout. I trust that is
        okay. Thank you.
    </string>
    <string name="genre_browser_activity">
        GENRE BROWSER ACTIVITY \n This is the screen for the GenreBrowserActivity.java. It is a
        tabbed activity and consists of an ActionBar (itself consisting of a custom title,
        background color, and a TabLayout). Each tab contains a list for each letter of the alphabet
        for all the genres. The lists consist of a ScrollView with a nested
        LinearLayout which then contains a number of TextViews created programmatically. Each
        TextView has an OnClickListener with an explicit Intent taking the user to the
        GenreInfoActivity.java, to display more details regarding the chosen genre. The
        FloatingActionButton has an OnClickListener which opens a Dialog allowing the user to enter
        new records into the DB.
    </string>
    <string name="city_browser_activity">
        CITY BROWSER ACTIVITY \n This is the screen for the CityBrowserActivity.java. It is a
        tabbed activity and consists of an ActionBar (itself consisting of a custom title,
        background color, and a Spinner). The Spinner is populated with a list of all the cities in
        the DB. The user can select a city to see a list of the associated Genres. The lists consist
        of a ScrollView with a nested LinearLayout which then contains a number of TextViews created
        programmatically. Each TextView has an OnClickListener with an explicit Intent taking the
        user to the GenreInfoActivity.java, to display more details regarding the chosen genre. The
        FloatingActionButton has an OnClickListener which opens a Dialog allowing the user to enter
        new records into the DB.
    </string>
    <string name="country_browser_activity">
        COUNTRY BROWSER ACTIVITY \n This is the screen for the CountryBrowserActivity.java. It is a
        tabbed activity and consists of an ActionBar (itself consisting of a custom title,
        background color, and a Spinner). The Spinner is populated with a list of all the countries
        in the DB. The user can select a city to see a list of the associated Genres. The lists
        consist of a ScrollView with a nested LinearLayout which then contains a number of TextViews
        created programmatically. Each TextView has an OnClickListener with an explicit Intent
        taking the user to the GenreInfoActivity.java, to display more details regarding the chosen
        genre. The FloatingActionButton has an OnClickListener which opens a Dialog allowing the
        user to enter new records into the DB.
    </string>
    <string name="playlist_browser_activity">
        PLAYLIST BROWSER ACTIVITY \n This is the screen for the PlaylistBrowserActivity.java. It is a
        tabbed activity and consists of an ActionBar (itself consisting of a custom title,
        background color, and a TabLayout). Each tab contains a list of all the playlists for each
        Streaming Service, such as Spotify. The lists consist of a ScrollView with a nested
        LinearLayout which then contains a number of TextViews created programmatically. Each
        TextView has an OnClickListener with an explicit Intent taking the user to the
        GenreInfoActivity.java, to display more details regarding the chosen genre. The
        FloatingActionButton has an OnClickListener which shows a SnackBar notifying the user that
        the option to add playlists is not currently available.
    </string>
    <string name="genre_info_activity">
        GENRE INFO ACTIVITY \n This is the screen for the GenreInfoActivity.java. It is a
        tabbed activity and consists of an ActionBar (itself consisting of a custom title,
        background color, and a TabLayout). There are three tabs. One for the associated playlists,
        one for the cities of origin and influence and one for the countries. The lists consist of a
        ScrollView with a nested LinearLayout which then contains a number of TextViews created
        programmatically. Each TextView in the playlist tab has an OnClickListener with an implicit
        Intent taking the user to either the Spotify app if they have it, in order to listen to the
        playlist, or the Google Play Store, if the user has that, to potentially download the app.
        If the user has neither, then a simple snackbar message will display. Each TextView in the
        cities and countries tabs has an OnClickListener with an explicit Intent taking the user to
        either the CityBrowserActivity.java or the CountryBrowserActivity.java to display more
        details regarding the chosen city/country. The FloatingActionButton has an OnClickListener
        which opens a Dialog allowing the user to enter new records into the DB.
    </string>
    <string name="search_results_activity">
        SEARCH RESULTS ACTIVITY \n This is the screen for the SearchResultsActivity.java. It is a
        tabbed activity and consists of an ActionBar (itself consisting of a custom title,
        background color, and a TabLayout). Each tab contains the search results for the playlists,
        genres, cities and countries respectively. The lists consist of a ScrollView with a nested
        LinearLayout which then contains a number of TextViews created programmatically. Each
        TextView in the playlist tab has an OnClickListener with an implicit Intent taking the user
        to either the Spotify app if they have it, in order to listen to the playlist, or the Google
        Play Store, if the user has that, to potentially download the app. If the user has neither,
        then a simple snackbar message will display. Each TextView in the cities and countries tabs
        has an OnClickListener with an explicit Intent taking the user to either the
        CityBrowserActivity.java or the CountryBrowserActivity.java to display more details
        regarding the chosen city/country. Each TextView in the genre tab has an OnClickListener
        with an explicit Intent taking the user to the GenreInfoActivity.java, to display more
        details regarding the chosen genre.
    </string>

    <string name="removed_description">
        Description text removed. It will reappear if you exit this screen and come back again
    </string>

</resources>
